/* ---------------------------------------------------- */
/*  Generated by Enterprise Architect Version 16.1 		*/
/*  Created On : 14-dic.-2022 8:33:05 p. m. 				*/
/*  DBMS       : PostgreSQL 						*/
/* ---------------------------------------------------- */

/* Drop Tables */

DROP TABLE IF EXISTS Agenda CASCADE
;

DROP TABLE IF EXISTS Categoria CASCADE
;

DROP TABLE IF EXISTS Cita CASCADE
;

DROP TABLE IF EXISTS Consultorio CASCADE
;

DROP TABLE IF EXISTS Eps CASCADE
;

DROP TABLE IF EXISTS Especialidad CASCADE
;

DROP TABLE IF EXISTS Medico CASCADE
;

DROP TABLE IF EXISTS Medico_consultorio CASCADE
;

DROP TABLE IF EXISTS Paciente CASCADE
;

DROP TABLE IF EXISTS Sede CASCADE
;

DROP TABLE IF EXISTS Tipo CASCADE
;

/* Create Tables */

CREATE TABLE Agenda
(
	k_agenda integer NOT NULL,	-- identificador de la agenda
	k_medico integer NOT NULL,	-- Identificador del medico
	k_tipo_documento varchar(3) NOT NULL,
	f_fecha varchar(7) NOT NULL	-- La fecha en el que se abre la agenda yyyy/mm
)
;

CREATE TABLE Categoria
(
	k_categoria integer NOT NULL,	-- Identificador de la categoria
	n_categoria varchar(10) NOT NULL,	-- Nombre de la categoria del afiliado
	o_descripcion varchar(50) NOT NULL	-- Descripcion de la categoria del afiliado
)
;

CREATE TABLE Cita
(
	k_cita integer NOT NULL,	-- identificador de la cita
	k_paciente integer NULL,	-- Identificador del paciente
	k_tipo integer NOT NULL,	-- Identificador del tipo
	k_tipo_documento varchar(3) NULL,	-- Tipo de documento del paciente C.C -> cedula de ciudadania T.I -> tarjeta de identidad C.E -> cedula de extranjeria R.C -> Registro Civil
	k_agenda integer NOT NULL,	-- Identificador de la agenda 
	f_cita date NOT NULL,	-- La fecha de la cita medica
	h_inicio time without time zone NOT NULL,	-- Hora de inicio de la cita
	h_final time without time zone NOT NULL,	-- Hora de finalizacion de la cita, dependiendo de la especialidad
	i_estado varchar(1) NULL,	-- Estado de la cita : A: Asistida C: Cancelada I: Incumplida
	q_precio_multa integer NULL,	-- Precio de la multa en caso de no asistir a la cita
	o_diagnostico varchar(870) NULL,	-- Diagnostico de la cita con indicaciones y medicamentos 
	o_especialidad integer NOT NULL	-- 	- Medicina general 	- Pediatria 	- Oftalmología 	- Odontologia
)
;

CREATE TABLE Consultorio
(
	k_numero_consultorio integer NOT NULL,	-- identificador del consultorio 
	k_nit_sede integer NOT NULL,	-- Identificador de la sede 
	k_especialidad integer NOT NULL,	-- Identificador de la especialidad del consultorio
	n_equipo_medico varchar(30) NOT NULL,	-- Nombre del equipo medico del consultorio
	o_descripcion_equipo varchar(250) NOT NULL	-- Descripcion del equipo medico
)
;

CREATE TABLE Eps
(
	k_eps integer NOT NULL,	-- El nit legal que tiene asociada la eps
	n_nombre varchar(50) NOT NULL	-- Es el nombre que tiene la eps
)
;

CREATE TABLE Especialidad
(
	k_especialidad integer NOT NULL,	-- Identificador de la especialidad con relacion al equipo medico
	n_nombre varchar(30) NOT NULL,	-- Nombre de la especialidad: 	- Medicina general 	- Pediatria 	- Oftalmologia 	- Odontologia
	o_descripcion varchar(500) NOT NULL	-- Resumen de lo que hace cada especialidad
)
;

CREATE TABLE Medico
(
	k_medico integer NOT NULL,	-- identificador del medico
	k_tipo_documento varchar(3) NOT NULL,	-- Tipo de documento del medico 	- C.C -> cédula de ciudadania 	- T.I -> tarjeta de identidad 	- C.E -> cédula de extrajeria 	- R.C -> Registro Civil
	k_especialidad integer NOT NULL,
	n_nombre varchar(30) NOT NULL,	-- Nombres del medico
	n_apellido varchar(30) NOT NULL,	-- apellidos del medico
	i_sexo varchar(1) NOT NULL,	-- Sexo del medico
	o_correo varchar(60) NOT NULL,	-- Correo del medico
	q_telefono bigint NOT NULL,	-- Telefono de contacto del medico
	f_fecha_nacimiento date NOT NULL	-- Fecha de nacimiento del medico
)
;

CREATE TABLE Medico_consultorio
(
	k_nit_sede integer NOT NULL,	-- Identificador de la sede de la eps
	k_numero_consultorio integer NOT NULL,	-- Identificador del numero del consultorio
	k_medico integer NOT NULL,	-- Identificador del medico
	k_tipo_documento varchar(3) NOT NULL,	-- Tipo de documento del médico C.C -> cedula de ciudadania T.I -> tarjeta de identidad C.E -> cedula de extranjeria R.C -> Registro Civil
	f_fecha date NOT NULL,	-- Fecha y dia en el que está el medico en el consultorio
	h_inicial time without time zone NOT NULL,	-- Hora inicial en el cual estará el medico en el consultorio
	h_final time without time zone NOT NULL	-- Hora en la cual el medico tendrá que dejar el consultorio
)
;

CREATE TABLE Paciente
(
	k_paciente integer NOT NULL,	-- identificador del paciente
	k_tipo_documento varchar(3) NOT NULL,	-- Tipo de documento del paciente 	- C.C -> cédula de ciudadania 	- T.I -> tarjeta de identidad 	- C.E -> cédula de extrajeria 	- R.C -> Registro Civil
	k_categoria integer NOT NULL,	-- Identificador de la categoria
	k_eps integer NOT NULL,	-- Identificador de la eps
	k_paciente_afiliado integer NULL,	-- Identificador del paciente que es Afiliado en caso de ser un Beneficiario 
	k_tipo_documento_afiliado varchar(3) NULL,	-- Tipo de documento de identidad del paciente que es Afiliado en caso de ser un Beneficiario
	n_nombre varchar(30) NOT NULL,	-- Nombres del paciente
	n_apellido varchar(30) NOT NULL,	-- Apellidos del paciente
	t_tipo_afiliacion varchar(1) NOT NULL,	-- Tipo de afiliacion del paciente 	- A = afiliado 	- B = beneficiario
	f_fecha_nacimiento date NOT NULL,	-- Fecha de nacimiento del paciente
	q_telefono bigint NOT NULL,	-- telefono de contacto del paciente
	o_correo varchar(60) NOT NULL,	-- Correo de contacto del paciente
	i_sexo varchar(1) NOT NULL,	-- Genero del paciente * M * F
	i_estado varchar(1) NOT NULL	-- Si el paciente esta Activo o Inactivo en la eps
)
;

CREATE TABLE Sede
(
	k_nit_sede integer NOT NULL,	-- Identificador de la sede de la eps
	k_eps integer NOT NULL,	-- Identificador de la eps
	n_nombre_sede varchar(30) NOT NULL,	-- Nombre de la sede de la eps
	o_direccion varchar(30) NOT NULL,	-- Direccion de ubicacion de la sede de la eps
	q_consultorio integer NOT NULL	-- Numero de consultorios que tiene la sede
)
;

CREATE TABLE Tipo
(
	k_tipo integer NOT NULL,	-- Identificador del tipo
	n_tipo varchar(30) NOT NULL,	-- Nombre del tipo de cita
	o_descripcion varchar(60) NOT NULL,	-- Descripción del tipo de cita
	v_copago integer NOT NULL	-- Valor de que se paga por la cita dependiendo del tipo de cita y tipo de beneficiario
)
;

/* Create Primary Keys, Indexes, Uniques, Checks */

ALTER TABLE Agenda ADD CONSTRAINT PK_Agenda
	PRIMARY KEY (k_agenda)
;

ALTER TABLE Agenda ADD CONSTRAINT CK_k_agenda CHECK (k_agenda >= 1)
;

ALTER TABLE Agenda ADD CONSTRAINT CK_k_medico CHECK (k_medico >= 1)
;

ALTER TABLE Agenda ADD CONSTRAINT CK_k_tipo_documento CHECK (k_tipo_documento IN ('C.C','T.I','C.E','R.C'))
;

CREATE INDEX IXFK_Agenda_Medico ON Agenda (k_medico ASC)
;

ALTER TABLE Categoria ADD CONSTRAINT PK_Categoria
	PRIMARY KEY (k_categoria)
;

ALTER TABLE Categoria ADD CONSTRAINT CK_k_categoria CHECK (k_categoria >= 1)
;

ALTER TABLE Cita ADD CONSTRAINT PK_Cita
	PRIMARY KEY (k_cita)
;

ALTER TABLE Cita ADD CONSTRAINT CK_k_cita CHECK (k_cita >= 1)
;

ALTER TABLE Cita ADD CONSTRAINT CK_k_paciente CHECK (k_paciente >= 1)
;

ALTER TABLE Cita ADD CONSTRAINT CK_k_agenda CHECK (k_agenda >= 1)
;

ALTER TABLE Cita ADD CONSTRAINT CK_h_final CHECK (h_final > h_inicio)
;

ALTER TABLE Cita ADD CONSTRAINT CK_i_estado CHECK (i_estado IN ('A','C','I'))
;

ALTER TABLE Cita ADD CONSTRAINT CK_q_precio_multa CHECK (q_precio_multa >= 0)
;

ALTER TABLE Cita ADD CONSTRAINT CK_k_tipo_documento CHECK (k_tipo_documento IN ('C.C','T.I','C.E','R.C'))
;

ALTER TABLE Cita ADD CONSTRAINT CK_k_tipo CHECK (k_tipo >= 1)
;

ALTER TABLE Cita ADD CONSTRAINT CK_o_especialidad CHECK (o_especialidad >= 1)
;

CREATE INDEX IXFK_Cita_Agenda ON Cita (k_agenda ASC)
;

CREATE INDEX IXFK_Cita_Paciente ON Cita (k_paciente ASC)
;

ALTER TABLE Consultorio ADD CONSTRAINT PK_Consultorio
	PRIMARY KEY (k_nit_sede,k_numero_consultorio)
;

ALTER TABLE Consultorio ADD CONSTRAINT CK_k_numero_consultorio CHECK (k_numero_consultorio >= 1)
;

ALTER TABLE Consultorio ADD CONSTRAINT CK_k_nit_sede CHECK (k_nit_sede >= 1)
;

ALTER TABLE Consultorio ADD CONSTRAINT CK_k_especialidad CHECK (k_especialidad >= 1)
;

CREATE INDEX IXFK_Consultorio_Sede ON Consultorio (k_nit_sede ASC)
;

ALTER TABLE Eps ADD CONSTRAINT PK_Eps
	PRIMARY KEY (k_eps)
;

ALTER TABLE Eps ADD CONSTRAINT CK_k_eps CHECK (k_eps >= 1)
;

ALTER TABLE Especialidad ADD CONSTRAINT PK_Especialidad
	PRIMARY KEY (k_especialidad)
;

ALTER TABLE Especialidad ADD CONSTRAINT CK_k_especialidad CHECK (k_especialidad >= 1)
;

ALTER TABLE Medico ADD CONSTRAINT PK_Medico
	PRIMARY KEY (k_medico,k_tipo_documento)
;

ALTER TABLE Medico ADD CONSTRAINT CK_k_medico CHECK (k_medico >= 1)
;

ALTER TABLE Medico ADD CONSTRAINT CK_k_tipo_documento CHECK (k_tipo_documento IN ('C.C','T.I','C.E','R.C'))
;

ALTER TABLE Medico ADD CONSTRAINT CK_i_sexo CHECK (i_sexo IN ('F','M','O'))
;

ALTER TABLE Medico ADD CONSTRAINT CK_q_telefono CHECK (q_telefono >=1)
;

ALTER TABLE Medico ADD CONSTRAINT CK_k_especialidad CHECK (k_especialidad >= 1)
;

ALTER TABLE Medico_consultorio ADD CONSTRAINT PK_Medico_consultorio
	PRIMARY KEY (k_numero_consultorio,k_medico,k_nit_sede,k_tipo_documento)
;

ALTER TABLE Medico_consultorio ADD CONSTRAINT CK_k_nit_sede CHECK (k_nit_sede >= 1)
;

ALTER TABLE Medico_consultorio ADD CONSTRAINT CK_k_numero_consultorio CHECK (k_numero_consultorio >= 1)
;

ALTER TABLE Medico_consultorio ADD CONSTRAINT CK_k_medico CHECK (k_medico >= 1)
;

ALTER TABLE Medico_consultorio ADD CONSTRAINT CK_h_final CHECK (h_final>h_inicial)
;

ALTER TABLE Medico_consultorio ADD CONSTRAINT CK_k_tipo_documento CHECK (k_tipo_documento IN ('C.C','T.I','C.E','R.C'))
;

CREATE INDEX IXFK_Medico_consultorio_Consultorio ON Medico_consultorio (k_nit_sede ASC,k_numero_consultorio ASC)
;

CREATE INDEX IXFK_Medico_consultorio_Medico ON Medico_consultorio (k_medico ASC)
;

ALTER TABLE Paciente ADD CONSTRAINT PK_Paciente
	PRIMARY KEY (k_paciente,k_tipo_documento)
;

ALTER TABLE Paciente ADD CONSTRAINT CK_k_paciente CHECK (k_paciente >= 1)
;

ALTER TABLE Paciente ADD CONSTRAINT CK_k_eps CHECK (k_eps >= 1)
;

ALTER TABLE Paciente ADD CONSTRAINT CK_k_tipo_documento CHECK (k_tipo_documento IN ('C.C','T.I','C.E','R.C'))
;

ALTER TABLE Paciente ADD CONSTRAINT CK_t_tipo_afiliacion CHECK (t_tipo_afiliacion IN ('A','B','a','b'))
;

ALTER TABLE Paciente ADD CONSTRAINT CK_i_sexo CHECK (i_sexo IN ('M','F'))
;

ALTER TABLE Paciente ADD CONSTRAINT CK_i_estado CHECK (i_estado IN ('A', 'I'))
;

ALTER TABLE Paciente ADD CONSTRAINT CK_k_paciente_afiliado CHECK (k_paciente_afiliado >= 1)
;

ALTER TABLE Paciente ADD CONSTRAINT CK_k_tipo_documento_afiliado CHECK (k_tipo_documento IN ('C.C','T.I','C.E','R.C'))
;

ALTER TABLE Paciente ADD CONSTRAINT CK_k_categoria CHECK (k_categoria >= 1)
;

CREATE INDEX IXFK_Paciente_Eps ON Paciente (k_eps ASC)
;

ALTER TABLE Sede ADD CONSTRAINT PK_Sede
	PRIMARY KEY (k_nit_sede)
;

ALTER TABLE Sede ADD CONSTRAINT CK_k_nit_sede CHECK (k_nit_sede >= 1)
;

ALTER TABLE Sede ADD CONSTRAINT CK_k_eps CHECK (k_eps >= 1)
;

ALTER TABLE Sede ADD CONSTRAINT CK_q_consultorio CHECK (q_consultorio >= 1)
;

CREATE INDEX IXFK_Sede_Eps ON Sede (k_eps ASC)
;

ALTER TABLE Tipo ADD CONSTRAINT PK_Tipo
	PRIMARY KEY (k_tipo)
;

ALTER TABLE Tipo ADD CONSTRAINT CK_k_tipo CHECK (k_tipo >= 1)
;

ALTER TABLE Tipo ADD CONSTRAINT CK_v_copago CHECK (v_copago >= 1)
;

/* Create Foreign Key Constraints */

ALTER TABLE Agenda ADD CONSTRAINT FK_Agenda_Medico
	FOREIGN KEY (k_medico,k_tipo_documento) REFERENCES Medico (k_medico,k_tipo_documento) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE Cita ADD CONSTRAINT FK_Cita_Agenda
	FOREIGN KEY (k_agenda) REFERENCES Agenda (k_agenda) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE Cita ADD CONSTRAINT FK_Cita_Paciente
	FOREIGN KEY (k_paciente,k_tipo_documento) REFERENCES Paciente (k_paciente,k_tipo_documento) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE Cita ADD CONSTRAINT FK_Cita_Tipo
	FOREIGN KEY (k_tipo) REFERENCES Tipo (k_tipo) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE Consultorio ADD CONSTRAINT FK_Consultorio_Especialidad
	FOREIGN KEY (k_especialidad) REFERENCES Especialidad (k_especialidad) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE Consultorio ADD CONSTRAINT FK_Consultorio_Sede
	FOREIGN KEY (k_nit_sede) REFERENCES Sede (k_nit_sede) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE Medico ADD CONSTRAINT FK_Medico_Especialidad
	FOREIGN KEY (k_especialidad) REFERENCES Especialidad (k_especialidad) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE Medico_consultorio ADD CONSTRAINT FK_Medico_consultorio_Consultorio
	FOREIGN KEY (k_nit_sede,k_numero_consultorio) REFERENCES Consultorio (k_nit_sede,k_numero_consultorio) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE Medico_consultorio ADD CONSTRAINT FK_Medico_consultorio_Medico
	FOREIGN KEY (k_medico,k_tipo_documento) REFERENCES Medico (k_medico,k_tipo_documento) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE Paciente ADD CONSTRAINT FK_Paciente_Categoria
	FOREIGN KEY (k_categoria) REFERENCES Categoria (k_categoria) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE Paciente ADD CONSTRAINT FK_Paciente_Eps
	FOREIGN KEY (k_eps) REFERENCES Eps (k_eps) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE Paciente ADD CONSTRAINT FK_Paciente_Paciente
	FOREIGN KEY (k_paciente_afiliado,k_tipo_documento_afiliado) REFERENCES Paciente (k_paciente,k_tipo_documento) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE Sede ADD CONSTRAINT FK_Sede_Eps
	FOREIGN KEY (k_eps) REFERENCES Eps (k_eps) ON DELETE No Action ON UPDATE No Action
;

/* Create Table Comments, Sequences for Autonumber Columns */

COMMENT ON TABLE Agenda
	IS 'Tabla que almacena las citas asociadas a un médico'
;

COMMENT ON COLUMN Agenda.k_agenda
	IS 'identificador de la agenda'
;

COMMENT ON COLUMN Agenda.k_medico
	IS 'Identificador del medico'
;

COMMENT ON COLUMN Agenda.f_fecha
	IS 'La fecha en el que se abre la agenda
yyyy/mm'
;

COMMENT ON TABLE Categoria
	IS 'Tabla que almacena la categoria del paciente'
;

COMMENT ON COLUMN Categoria.k_categoria
	IS 'Identificador de la categoria'
;

COMMENT ON COLUMN Categoria.n_categoria
	IS 'Nombre de la categoria del afiliado'
;

COMMENT ON COLUMN Categoria.o_descripcion
	IS 'Descripcion de la categoria del afiliado'
;

COMMENT ON TABLE Cita
	IS 'Tabla que almacena las citas y sus propiedades'
;

COMMENT ON COLUMN Cita.k_cita
	IS 'identificador de la cita'
;

COMMENT ON COLUMN Cita.k_paciente
	IS 'Identificador del paciente'
;

COMMENT ON COLUMN Cita.k_tipo
	IS 'Identificador del tipo'
;

COMMENT ON COLUMN Cita.k_tipo_documento
	IS 'Tipo de documento del paciente
C.C -> cedula de ciudadania
T.I -> tarjeta de identidad
C.E -> cedula de extranjeria
R.C -> Registro Civil'
;

COMMENT ON COLUMN Cita.k_agenda
	IS 'Identificador de la agenda '
;

COMMENT ON COLUMN Cita.f_cita
	IS 'La fecha de la cita medica'
;

COMMENT ON COLUMN Cita.h_inicio
	IS 'Hora de inicio de la cita'
;

COMMENT ON COLUMN Cita.h_final
	IS 'Hora de finalizacion de la cita, dependiendo de la especialidad'
;

COMMENT ON COLUMN Cita.i_estado
	IS 'Estado de la cita :
A: Asistida
C: Cancelada
I: Incumplida'
;

COMMENT ON COLUMN Cita.q_precio_multa
	IS 'Precio de la multa en caso de no asistir a la cita'
;

COMMENT ON COLUMN Cita.o_diagnostico
	IS 'Diagnostico de la cita con indicaciones y medicamentos '
;

COMMENT ON COLUMN Cita.o_especialidad
	IS '	- Medicina general
	- Pediatria
	- Oftalmología
	- Odontologia'
;

COMMENT ON TABLE Consultorio
	IS 'Tabla que almacena los datos  del consultorio donde se atienden a los pacientes'
;

COMMENT ON COLUMN Consultorio.k_numero_consultorio
	IS 'identificador del consultorio '
;

COMMENT ON COLUMN Consultorio.k_nit_sede
	IS 'Identificador de la sede '
;

COMMENT ON COLUMN Consultorio.k_especialidad
	IS 'Identificador de la especialidad del consultorio'
;

COMMENT ON COLUMN Consultorio.n_equipo_medico
	IS 'Nombre del equipo medico del consultorio'
;

COMMENT ON COLUMN Consultorio.o_descripcion_equipo
	IS 'Descripcion del equipo medico'
;

COMMENT ON TABLE Eps
	IS 'Tabla de la entidad prestadora de salud'
;

COMMENT ON COLUMN Eps.k_eps
	IS 'El nit legal que tiene asociada la eps'
;

COMMENT ON COLUMN Eps.n_nombre
	IS 'Es el nombre que tiene la eps'
;

COMMENT ON TABLE Especialidad
	IS 'Tabla que almacena las diferentes especialidades con relación al consultorio '
;

COMMENT ON COLUMN Especialidad.k_especialidad
	IS 'Identificador de la especialidad con relacion al equipo medico'
;

COMMENT ON COLUMN Especialidad.n_nombre
	IS 'Nombre de la especialidad:
	- Medicina general
	- Pediatria
	- Oftalmologia
	- Odontologia'
;

COMMENT ON COLUMN Especialidad.o_descripcion
	IS 'Resumen de lo que hace cada especialidad'
;

COMMENT ON TABLE Medico
	IS 'Tabla de los medicos trabajadores de la EPS'
;

COMMENT ON COLUMN Medico.k_medico
	IS 'identificador del medico'
;

COMMENT ON COLUMN Medico.k_tipo_documento
	IS 'Tipo de documento del medico
	- C.C -> cédula de ciudadania
	- T.I -> tarjeta de identidad
	- C.E -> cédula de extrajeria
	- R.C -> Registro Civil'
;

COMMENT ON COLUMN Medico.n_nombre
	IS 'Nombres del medico'
;

COMMENT ON COLUMN Medico.n_apellido
	IS 'apellidos del medico'
;

COMMENT ON COLUMN Medico.i_sexo
	IS 'Sexo del medico'
;

COMMENT ON COLUMN Medico.o_correo
	IS 'Correo del medico'
;

COMMENT ON COLUMN Medico.q_telefono
	IS 'Telefono de contacto del medico'
;

COMMENT ON COLUMN Medico.f_fecha_nacimiento
	IS 'Fecha de nacimiento del medico'
;

COMMENT ON TABLE Medico_consultorio
	IS 'Tabla que almacena el horario entre el medico y el consultorio'
;

COMMENT ON COLUMN Medico_consultorio.k_nit_sede
	IS 'Identificador de la sede de la eps'
;

COMMENT ON COLUMN Medico_consultorio.k_numero_consultorio
	IS 'Identificador del numero del consultorio'
;

COMMENT ON COLUMN Medico_consultorio.k_medico
	IS 'Identificador del medico'
;

COMMENT ON COLUMN Medico_consultorio.k_tipo_documento
	IS 'Tipo de documento del médico
C.C -> cedula de ciudadania
T.I -> tarjeta de identidad
C.E -> cedula de extranjeria
R.C -> Registro Civil'
;

COMMENT ON COLUMN Medico_consultorio.f_fecha
	IS 'Fecha y dia en el que está el medico en el consultorio'
;

COMMENT ON COLUMN Medico_consultorio.h_inicial
	IS 'Hora inicial en el cual estará el medico en el consultorio'
;

COMMENT ON COLUMN Medico_consultorio.h_final
	IS 'Hora en la cual el medico tendrá que dejar el consultorio'
;

COMMENT ON TABLE Paciente
	IS 'Tabla que almacena los datos del paciente afiliado a la EPS'
;

COMMENT ON COLUMN Paciente.k_paciente
	IS 'identificador del paciente'
;

COMMENT ON COLUMN Paciente.k_tipo_documento
	IS 'Tipo de documento del paciente
	- C.C -> cédula de ciudadania
	- T.I -> tarjeta de identidad
	- C.E -> cédula de extrajeria
	- R.C -> Registro Civil'
;

COMMENT ON COLUMN Paciente.k_categoria
	IS 'Identificador de la categoria'
;

COMMENT ON COLUMN Paciente.k_eps
	IS 'Identificador de la eps'
;

COMMENT ON COLUMN Paciente.k_paciente_afiliado
	IS 'Identificador del paciente que es Afiliado en caso de ser un Beneficiario '
;

COMMENT ON COLUMN Paciente.k_tipo_documento_afiliado
	IS 'Tipo de documento de identidad del paciente que es Afiliado en caso de ser un Beneficiario'
;

COMMENT ON COLUMN Paciente.n_nombre
	IS 'Nombres del paciente'
;

COMMENT ON COLUMN Paciente.n_apellido
	IS 'Apellidos del paciente'
;

COMMENT ON COLUMN Paciente.t_tipo_afiliacion
	IS 'Tipo de afiliacion del paciente
	- A = afiliado
	- B = beneficiario'
;

COMMENT ON COLUMN Paciente.f_fecha_nacimiento
	IS 'Fecha de nacimiento del paciente'
;

COMMENT ON COLUMN Paciente.q_telefono
	IS 'telefono de contacto del paciente'
;

COMMENT ON COLUMN Paciente.o_correo
	IS 'Correo de contacto del paciente'
;

COMMENT ON COLUMN Paciente.i_sexo
	IS 'Genero del paciente
* M
* F'
;

COMMENT ON COLUMN Paciente.i_estado
	IS 'Si el paciente esta Activo o Inactivo en la eps'
;

COMMENT ON TABLE Sede
	IS 'Tabla donde se almacenarán los datos de las cedes de la eps'
;

COMMENT ON COLUMN Sede.k_nit_sede
	IS 'Identificador de la sede de la eps'
;

COMMENT ON COLUMN Sede.k_eps
	IS 'Identificador de la eps'
;

COMMENT ON COLUMN Sede.n_nombre_sede
	IS 'Nombre de la sede de la eps'
;

COMMENT ON COLUMN Sede.o_direccion
	IS 'Direccion de ubicacion de la sede de la eps'
;

COMMENT ON COLUMN Sede.q_consultorio
	IS 'Numero de consultorios que tiene la sede'
;

COMMENT ON TABLE Tipo
	IS 'Tabla que almacena los tipos de cita que hay'
;

COMMENT ON COLUMN Tipo.k_tipo
	IS 'Identificador del tipo'
;

COMMENT ON COLUMN Tipo.n_tipo
	IS 'Nombre del tipo de cita'
;

COMMENT ON COLUMN Tipo.o_descripcion
	IS 'Descripción del tipo de cita'
;

COMMENT ON COLUMN Tipo.v_copago
	IS 'Valor de que se paga por la cita dependiendo del tipo de cita y tipo de beneficiario'
;
